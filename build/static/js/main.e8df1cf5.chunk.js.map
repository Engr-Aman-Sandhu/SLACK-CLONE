{"version":3,"sources":["firebase.js","actions/index.js","actions/types.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","registerServiceWorker.js","Spinner.js","reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","databaseRef","database","ref","storage","child","setCurrentChannel","channel","type","payload","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","modal","primary","secondary","user","props","currentUser","usersRef","userColors","removeListener","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","map","i","react_default","a","createElement","Fragment","key","Divider","className","onClick","setColors","style","background","openModal","inherits","createClass","value","_this$state","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","lib","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","userRef","metadata","contentType","dropdownOptions","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","_this2","_this$state2","Grid","Column","Row","padding","margin","floated","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","dist_default","node","image","height","border","scale","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","forEach","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","defineProperty","changeChannel","remove","clearNotifications","updatedNotifications","toConsumableArray","getNotificationCount","displayChannels","Item","opacity","active","_ref","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","undefined","updatedUsers","reduce","acc","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","starredChannel","objectSpread","channelToRemove","filteredChannels","filter","SidePanel","_this$props","fixed","fontSize","SidePanel_UserPanel","SidePanel_Starred","SidePanel_Channels","SidePanel_DirectMessages","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","_this$props2","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","ctrlKey","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","_this$state3","dist_es","onSelect","title","onKeyDown","labelPosition","some","Group","widths","Messages_FileModal","Messages_ProgressBar","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","Messages_Message","displayChannelName","displayTypingUsers","display","alignItems","Messages_Typing","displayMessageSkeleton","_","Messages_Skeleton","prevProps","Messages_MessagesHeader","Messages_MessageForm","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","b","_ref2","slicedToArray","List","Description","slice","attached","Accordion","styled","Title","circular","components_ColorPanel_ColorPanel","components_SidePanel_SidePanel","marginLeft","components_Messages_Messages","components_MetaPanel_MetaPanel","Login","email","password","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","collections_Message_Message","Link","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","iconPositon","placeolder","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Spinner","Dimmer","Loader","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","src_Spinner","Switch","Route","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","es","BrowserRouter","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e8df1cf5.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.12.1/firebase-app.js';\r\n// import { getAnalytics } from 'https://www.gstatic.com/firebasejs/9.12.1/firebase-analytics.js';\r\n\r\n// import firebase from 'firebase/app';\r\n// import 'firebase/auth';\r\n// import 'firebase/database';\r\n// import 'firebase/storage';\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/database';\r\nimport 'firebase/compat/storage';\r\n\r\n// import { initializeApp } from 'firebase/compat/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCvAMNkOZe85uLkstaknfQimWGxpQ9w6u8',\r\n  authDomain: 'slack-clone-40c16.firebaseapp.com',\r\n  databaseURL:\r\n    'https://slack-clone-40c16-default-rtdb.asia-southeast1.firebasedatabase.app',\r\n  projectId: 'slack-clone-40c16',\r\n  storageBucket: 'slack-clone-40c16.appspot.com',\r\n  messagingSenderId: '778392929202',\r\n  appId: '1:778392929202:web:d312060155566bab895aab',\r\n  measurementId: 'G-V0CGC1RXGP',\r\n};\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n// const db = getFirestore(app);\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst auth = firebase.auth();\r\nconst databaseRef = firebase.database().ref();\r\nconst storageRef = firebase.storage().ref();\r\nexport const slackRef = databaseRef.child('Slack-Clone');\r\nexport default firebase;\r\n","import * as actionTypes from './types';\r\n\r\n/* User Actions */\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: actionTypes.SET_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_USER,\r\n  };\r\n};\r\n\r\n/* Channel Actions */\r\nexport const setCurrentChannel = (channel) => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_CHANNEL,\r\n    payload: {\r\n      currentChannel: channel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setPrivateChannel = (isPrivateChannel) => {\r\n  return {\r\n    type: actionTypes.SET_PRIVATE_CHANNEL,\r\n    payload: {\r\n      isPrivateChannel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setUserPosts = (userPosts) => {\r\n  return {\r\n    type: actionTypes.SET_USER_POSTS,\r\n    payload: {\r\n      userPosts,\r\n    },\r\n  };\r\n};\r\n\r\n/* Colors Actions */\r\nexport const setColors = (primaryColor, secondaryColor) => {\r\n  return {\r\n    type: actionTypes.SET_COLORS,\r\n    payload: {\r\n      primaryColor,\r\n      secondaryColor,\r\n    },\r\n  };\r\n};\r\n","/* User Action Types */\r\nexport const SET_USER = 'SET_USER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\n\r\n/* Channel Action Types */\r\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\r\nexport const SET_PRIVATE_CHANNEL = 'SET_PRIVATE_CHANNEL';\r\nexport const SET_USER_POSTS = 'SET_USER_POSTS';\r\n\r\n/* Colors Action Types */\r\nexport const SET_COLORS = 'SET_COLORS';\r\n","import React from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setColors } from '../../actions';\r\n// prettier-ignore\r\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\r\nimport { SliderPicker } from 'react-color';\r\n\r\nclass ColorPanel extends React.Component {\r\n  state = {\r\n    modal: false,\r\n    primary: '',\r\n    secondary: '',\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    userColors: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListener(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\r\n  };\r\n\r\n  addListener = (userId) => {\r\n    let userColors = [];\r\n    this.state.usersRef.child(`${userId}/colors`).on('child_added', (snap) => {\r\n      userColors.unshift(snap.val());\r\n      this.setState({ userColors });\r\n    });\r\n  };\r\n\r\n  handleChangePrimary = (color) => this.setState({ primary: color.hex });\r\n\r\n  handleChangeSecondary = (color) => this.setState({ secondary: color.hex });\r\n\r\n  handleSaveColors = () => {\r\n    if (this.state.primary && this.state.secondary) {\r\n      this.saveColors(this.state.primary, this.state.secondary);\r\n    }\r\n  };\r\n\r\n  saveColors = (primary, secondary) => {\r\n    this.state.usersRef\r\n      .child(`${this.state.user.uid}/colors`)\r\n      .push()\r\n      .update({\r\n        primary,\r\n        secondary,\r\n      })\r\n      .then(() => {\r\n        console.log('Colors added');\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  displayUserColors = (colors) =>\r\n    colors.length > 0 &&\r\n    colors.map((color, i) => (\r\n      <React.Fragment key={i}>\r\n        <Divider />\r\n        <div\r\n          className=\"color__container\"\r\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\r\n        >\r\n          <div className=\"color__square\" style={{ background: color.primary }}>\r\n            <div\r\n              className=\"color__overlay\"\r\n              style={{ background: color.secondary }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { modal, primary, secondary, userColors } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\r\n        {this.displayUserColors(userColors)}\r\n\r\n        {/* Color Picker Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Choose App Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted>\r\n              <Label content=\"Primary Color\" />\r\n              <SliderPicker\r\n                color={primary}\r\n                onChange={this.handleChangePrimary}\r\n              />\r\n            </Segment>\r\n\r\n            <Segment inverted>\r\n              <Label content=\"Secondary Color\" />\r\n              <SliderPicker\r\n                color={secondary}\r\n                onChange={this.handleChangeSecondary}\r\n              />\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\r\n              <Icon name=\"checkmark\" /> Save Colors\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setColors })(ColorPanel);\r\n","import React from 'react';\r\nimport firebase from '../../firebase';\r\nimport AvatarEditor from 'react-avatar-editor';\r\n// prettier-ignore\r\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\r\n\r\nclass UserPanel extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    modal: false,\r\n    previewImage: '',\r\n    croppedImage: '',\r\n    blob: null,\r\n    uploadedCroppedImage: '',\r\n    storageRef: firebase.storage().ref(),\r\n    userRef: firebase.auth().currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    metadata: {\r\n      contentType: 'image/jpeg',\r\n    },\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: 'user',\r\n      text: (\r\n        <span>\r\n          Signed in as <strong>{this.state.user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true,\r\n    },\r\n    {\r\n      key: 'avatar',\r\n      text: <span onClick={this.openModal}>Change Avatar</span>,\r\n    },\r\n    {\r\n      key: 'signout',\r\n      text: <span onClick={this.handleSignout}>Sign Out</span>,\r\n    },\r\n  ];\r\n\r\n  uploadCroppedImage = () => {\r\n    const { storageRef, userRef, blob, metadata } = this.state;\r\n\r\n    storageRef\r\n      .child(`avatars/user/${userRef.uid}`)\r\n      .put(blob, metadata)\r\n      .then((snap) => {\r\n        snap.ref.getDownloadURL().then((downloadURL) => {\r\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\r\n            this.changeAvatar()\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  changeAvatar = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        photoURL: this.state.uploadedCroppedImage,\r\n      })\r\n      .then(() => {\r\n        console.log('PhotoURL updated');\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(this.state.user.uid)\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => {\r\n        console.log('User avatar updated');\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener('load', () => {\r\n        this.setState({ previewImage: reader.result });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCropImage = () => {\r\n    if (this.avatarEditor) {\r\n      this.avatarEditor.getImageScaledToCanvas().toBlob((blob) => {\r\n        let imageUrl = URL.createObjectURL(blob);\r\n        this.setState({\r\n          croppedImage: imageUrl,\r\n          blob,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSignout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log('signed out!'));\r\n  };\r\n\r\n  render() {\r\n    const { user, modal, previewImage, croppedImage } = this.state;\r\n    const { primaryColor } = this.props;\r\n\r\n    return (\r\n      <Grid style={{ background: primaryColor }}>\r\n        <Grid.Column>\r\n          <Grid.Row style={{ padding: '1.2em', margin: 0 }}>\r\n            {/* App Header */}\r\n            <Header inverted floated=\"left\" as=\"h2\">\r\n              <Icon name=\"code\" />\r\n              <Header.Content>DevChat</Header.Content>\r\n            </Header>\r\n\r\n            {/* User Dropdown  */}\r\n            <Header style={{ padding: '0.25em' }} as=\"h4\" inverted>\r\n              <Dropdown\r\n                trigger={\r\n                  <span>\r\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\r\n                    {user.displayName}\r\n                  </span>\r\n                }\r\n                options={this.dropdownOptions()}\r\n              />\r\n            </Header>\r\n          </Grid.Row>\r\n\r\n          {/* Change User Avatar Modal   */}\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Change Avatar</Modal.Header>\r\n            <Modal.Content>\r\n              <Input\r\n                onChange={this.handleChange}\r\n                fluid\r\n                type=\"file\"\r\n                label=\"New Avatar\"\r\n                name=\"previewImage\"\r\n              />\r\n              <Grid centered stackable columns={2}>\r\n                <Grid.Row centered>\r\n                  <Grid.Column className=\"ui center aligned grid\">\r\n                    {previewImage && (\r\n                      <AvatarEditor\r\n                        ref={(node) => (this.avatarEditor = node)}\r\n                        image={previewImage}\r\n                        width={120}\r\n                        height={120}\r\n                        border={50}\r\n                        scale={1.2}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {croppedImage && (\r\n                      <Image\r\n                        style={{ margin: '3.5em auto' }}\r\n                        width={100}\r\n                        height={100}\r\n                        src={croppedImage}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              {croppedImage && (\r\n                <Button\r\n                  color=\"green\"\r\n                  inverted\r\n                  onClick={this.uploadCroppedImage}\r\n                >\r\n                  <Icon name=\"save\" /> Change Avatar\r\n                </Button>\r\n              )}\r\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\r\n                <Icon name=\"image\" /> Preview\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;\r\n","import React from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\n// prettier-ignore\r\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\r\n\r\nclass Channels extends React.Component {\r\n  state = {\r\n    activeChannel: '',\r\n    user: this.props.currentUser,\r\n    channel: null,\r\n    channels: [],\r\n    channelName: '',\r\n    channelDetails: '',\r\n    channelsRef: firebase.database().ref('channels'),\r\n    messagesRef: firebase.database().ref('messages'),\r\n    typingRef: firebase.database().ref('typing'),\r\n    notifications: [],\r\n    modal: false,\r\n    firstLoad: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListeners();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelsRef.on('child_added', (snap) => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n      this.addNotificationListener(snap.key);\r\n    });\r\n  };\r\n\r\n  addNotificationListener = (channelId) => {\r\n    this.state.messagesRef.child(channelId).on('value', (snap) => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n\r\n    let index = notifications.findIndex(\r\n      (notification) => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0,\r\n      });\r\n    }\r\n\r\n    this.setState({ notifications });\r\n  };\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off();\r\n    this.state.channels.forEach((channel) => {\r\n      this.state.messagesRef.child(channel.id).off();\r\n    });\r\n  };\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state;\r\n\r\n    const key = channelsRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL,\r\n      },\r\n    };\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: '', channelDetails: '' });\r\n        this.closeModal();\r\n        console.log('channel added');\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.setActiveChannel(channel);\r\n    this.state.typingRef\r\n      .child(this.state.channel.id)\r\n      .child(this.state.user.uid)\r\n      .remove();\r\n    this.clearNotifications();\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      (notification) => notification.id === this.state.channel.id\r\n    );\r\n\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications];\r\n      updatedNotifications[index].total =\r\n        this.state.notifications[index].lastKnownTotal;\r\n      updatedNotifications[index].count = 0;\r\n      this.setState({ notifications: updatedNotifications });\r\n    }\r\n  };\r\n\r\n  setActiveChannel = (channel) => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  getNotificationCount = (channel) => {\r\n    let count = 0;\r\n\r\n    this.state.notifications.forEach((notification) => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n\r\n    if (count > 0) return count;\r\n  };\r\n\r\n  displayChannels = (channels) =>\r\n    channels.length > 0 &&\r\n    channels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu className=\"menu\">\r\n          <Menu.Item>\r\n            <span>\r\n              <Icon name=\"exchange\" /> CHANNELS\r\n            </span>{' '}\r\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        {/* Add Channel Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"About the Channel\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  Channels\r\n);\r\n","import React from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass DirectMessages extends React.Component {\r\n  state = {\r\n    activeChannel: '',\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref('users'),\r\n    connectedRef: firebase.database().ref('.info/connected'),\r\n    presenceRef: firebase.database().ref('presence'),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.usersRef.off();\r\n    this.state.presenceRef.off();\r\n    this.state.connectedRef.off();\r\n  };\r\n\r\n  addListeners = (currentUserUid) => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on('child_added', (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user['uid'] = snap.key;\r\n        user['status'] = 'offline';\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on('value', (snap) => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove((err) => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on('child_added', (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on('child_removed', (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user['status'] = `${connected ? 'online' : 'offline'}`;\r\n      }\r\n      return acc.concat(user);\r\n    }, []);\r\n    this.setState({ users: updatedUsers });\r\n  };\r\n\r\n  isUserOnline = (user) => user.status === 'online';\r\n\r\n  changeChannel = (user) => {\r\n    const channelId = this.getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name,\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user.uid);\r\n  };\r\n\r\n  getChannelId = (userId) => {\r\n    const currentUserId = this.state.user.uid;\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  setActiveChannel = (userId) => {\r\n    this.setState({ activeChannel: userId });\r\n  };\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"mail\" /> DIRECT MESSAGES\r\n          </span>{' '}\r\n          ({users.length})\r\n        </Menu.Item>\r\n        {users.map((user) => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user.uid === activeChannel}\r\n            onClick={() => this.changeChannel(user)}\r\n            style={{ opacity: 0.7, fontStyle: 'italic' }}\r\n          >\r\n            <Icon\r\n              name=\"circle\"\r\n              color={this.isUserOnline(user) ? 'green' : 'red'}\r\n            />\r\n            @ {user.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  DirectMessages\r\n);\r\n","import React from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass Starred extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    activeChannel: '',\r\n    starredChannels: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\r\n  };\r\n\r\n  addListeners = (userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .on('child_added', (snap) => {\r\n        const starredChannel = { id: snap.key, ...snap.val() };\r\n        this.setState({\r\n          starredChannels: [...this.state.starredChannels, starredChannel],\r\n        });\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .on('child_removed', (snap) => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannels = this.state.starredChannels.filter(\r\n          (channel) => {\r\n            return channel.id !== channelToRemove.id;\r\n          }\r\n        );\r\n        this.setState({ starredChannels: filteredChannels });\r\n      });\r\n  };\r\n\r\n  setActiveChannel = (channel) => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n  };\r\n\r\n  displayChannels = (starredChannels) =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  render() {\r\n    const { starredChannels } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"star\" /> STARRED\r\n          </span>{' '}\r\n          ({starredChannels.length})\r\n        </Menu.Item>\r\n        {this.displayChannels(starredChannels)}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(Starred);\r\n","import React from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nimport UserPanel from './UserPanel';\r\nimport Channels from './Channels';\r\nimport DirectMessages from './DirectMessages';\r\nimport Starred from './Starred';\r\n\r\nclass SidePanel extends React.Component {\r\n  render() {\r\n    const { currentUser, primaryColor } = this.props;\r\n\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style={{ background: primaryColor, fontSize: '1.2rem' }}\r\n      >\r\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\r\n        <Starred currentUser={currentUser} />\r\n        <Channels currentUser={currentUser} />\r\n        <DirectMessages currentUser={currentUser} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from 'react';\r\nimport { Header, Segment, Input, Icon } from 'semantic-ui-react';\r\n\r\nclass MessagesHeader extends React.Component {\r\n  render() {\r\n    const {\r\n      channelName,\r\n      numUniqueUsers,\r\n      handleSearchChange,\r\n      searchLoading,\r\n      isPrivateChannel,\r\n      handleStar,\r\n      isChannelStarred,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Segment clearing>\r\n        {/* Channel Title */}\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\r\n          <span>\r\n            {channelName}\r\n            {!isPrivateChannel && (\r\n              <Icon\r\n                onClick={handleStar}\r\n                name={isChannelStarred ? 'star' : 'star outline'}\r\n                color={isChannelStarred ? 'yellow' : 'black'}\r\n              />\r\n            )}\r\n          </span>\r\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\r\n        </Header>\r\n\r\n        {/* Channel Search Input */}\r\n        <Header floated=\"right\">\r\n          <Input\r\n            loading={searchLoading}\r\n            onChange={handleSearchChange}\r\n            size=\"mini\"\r\n            icon=\"search\"\r\n            name=\"searchTerm\"\r\n            placeholder=\"Search Messages\"\r\n          />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import React from 'react';\r\nimport mime from 'mime-types';\r\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\r\n\r\nclass FileModal extends React.Component {\r\n  state = {\r\n    file: null,\r\n    authorized: ['image/jpeg', 'image/png'],\r\n  };\r\n\r\n  addFile = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n\r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = (filename) =>\r\n    this.state.authorized.includes(mime.lookup(filename));\r\n\r\n  clearFile = () => this.setState({ file: null });\r\n\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n\r\n    return (\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header>Select an Image File</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            onChange={this.addFile}\r\n            fluid\r\n            label=\"File types: jpg, png\"\r\n            name=\"file\"\r\n            type=\"file\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={this.sendFile} color=\"green\" inverted>\r\n            <Icon name=\"checkmark\" /> Send\r\n          </Button>\r\n          <Button color=\"red\" inverted onClick={closeModal}>\r\n            <Icon name=\"remove\" /> Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileModal;\r\n","import React from 'react';\r\nimport { Progress } from 'semantic-ui-react';\r\n\r\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\r\n  uploadState === 'uploading' && (\r\n    <Progress\r\n      className=\"progress__bar\"\r\n      percent={percentUploaded}\r\n      progress\r\n      indicating\r\n      size=\"medium\"\r\n      inverted\r\n    />\r\n  );\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport uuidv4 from 'uuid/v4';\r\nimport firebase from '../../firebase';\r\nimport { Segment, Button, Input } from 'semantic-ui-react';\r\nimport { Picker, emojiIndex } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nimport FileModal from './FileModal';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nclass MessageForm extends React.Component {\r\n  state = {\r\n    storageRef: firebase.storage().ref(),\r\n    typingRef: firebase.database().ref('typing'),\r\n    uploadTask: null,\r\n    uploadState: '',\r\n    percentUploaded: 0,\r\n    message: '',\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    errors: [],\r\n    modal: false,\r\n    emojiPicker: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.uploadTask !== null) {\r\n      this.state.uploadTask.cancel();\r\n      this.setState({ uploadTask: null });\r\n    }\r\n  }\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.ctrlKey && event.keyCode === 13) {\r\n      this.sendMessage();\r\n    }\r\n\r\n    const { message, typingRef, channel, user } = this.state;\r\n\r\n    if (message) {\r\n      typingRef.child(channel.id).child(user.uid).set(user.displayName);\r\n    } else {\r\n      typingRef.child(channel.id).child(user.uid).remove();\r\n    }\r\n  };\r\n\r\n  handleTogglePicker = () => {\r\n    this.setState({ emojiPicker: !this.state.emojiPicker });\r\n  };\r\n\r\n  handleAddEmoji = (emoji) => {\r\n    const oldMessage = this.state.message;\r\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\r\n    this.setState({ message: newMessage, emojiPicker: false });\r\n    setTimeout(() => this.messageInputRef.focus(), 0);\r\n  };\r\n\r\n  colonToUnicode = (message) => {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\r\n      x = x.replace(/:/g, '');\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== 'undefined') {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== 'undefined') {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = ':' + x + ':';\r\n      return x;\r\n    });\r\n  };\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user.uid,\r\n        name: this.state.user.displayName,\r\n        avatar: this.state.user.photoURL,\r\n      },\r\n    };\r\n    if (fileUrl !== null) {\r\n      message['image'] = fileUrl;\r\n    } else {\r\n      message['content'] = this.state.message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const { getMessagesRef } = this.props;\r\n    const { message, channel, user, typingRef } = this.state;\r\n\r\n    if (message) {\r\n      this.setState({ loading: true });\r\n      getMessagesRef()\r\n        .child(channel.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({ loading: false, message: '', errors: [] });\r\n          typingRef.child(channel.id).child(user.uid).remove();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err),\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errors: this.state.errors.concat({ message: 'Add a message' }),\r\n      });\r\n    }\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private/${this.state.channel.id}`;\r\n    } else {\r\n      return 'chat/public';\r\n    }\r\n  };\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessagesRef();\r\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\r\n\r\n    this.setState(\r\n      {\r\n        uploadState: 'uploading',\r\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\r\n      },\r\n      () => {\r\n        this.state.uploadTask.on(\r\n          'state_changed',\r\n          (snap) => {\r\n            const percentUploaded = Math.round(\r\n              (snap.bytesTransferred / snap.totalBytes) * 100\r\n            );\r\n            this.setState({ percentUploaded });\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: 'error',\r\n              uploadTask: null,\r\n            });\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref\r\n              .getDownloadURL()\r\n              .then((downloadUrl) => {\r\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\r\n              })\r\n              .catch((err) => {\r\n                console.error(err);\r\n                this.setState({\r\n                  errors: this.state.errors.concat(err),\r\n                  uploadState: 'error',\r\n                  uploadTask: null,\r\n                });\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n        this.setState({ uploadState: 'done' });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err),\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // prettier-ignore\r\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        {emojiPicker && (\r\n          <Picker\r\n            set=\"apple\"\r\n            onSelect={this.handleAddEmoji}\r\n            className=\"emojipicker\"\r\n            title=\"Pick your emoji\"\r\n            emoji=\"point_up\"\r\n          />\r\n        )}\r\n        <Input\r\n          fluid\r\n          name=\"message\"\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={message}\r\n          ref={(node) => (this.messageInputRef = node)}\r\n          style={{ marginBottom: '0.7em' }}\r\n          label={\r\n            <Button\r\n              icon={emojiPicker ? 'close' : 'add'}\r\n              content={emojiPicker ? 'Close' : null}\r\n              onClick={this.handleTogglePicker}\r\n            />\r\n          }\r\n          labelPosition=\"left\"\r\n          className={\r\n            errors.some((error) => error.message.includes('message'))\r\n              ? 'error'\r\n              : ''\r\n          }\r\n          placeholder=\"Write your message\"\r\n        />\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            onClick={this.sendMessage}\r\n            disabled={loading}\r\n            color=\"orange\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n          />\r\n          <Button\r\n            color=\"teal\"\r\n            disabled={uploadState === 'uploading'}\r\n            onClick={this.openModal}\r\n            content=\"Upload Media\"\r\n            labelPosition=\"right\"\r\n            icon=\"cloud upload\"\r\n          />\r\n        </Button.Group>\r\n        <FileModal\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n          uploadFile={this.uploadFile}\r\n        />\r\n        <ProgressBar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Comment, Image } from 'semantic-ui-react';\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? 'message__self' : '';\r\n};\r\n\r\nconst isImage = (message) => {\r\n  return message.hasOwnProperty('image') && !message.hasOwnProperty('content');\r\n};\r\n\r\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <Comment>\r\n    <Comment.Avatar src={message.user.avatar} />\r\n    <Comment.Content className={isOwnMessage(message, user)}>\r\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\r\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n      {isImage(message) ? (\r\n        <Image src={message.image} className=\"message__image\" />\r\n      ) : (\r\n        <Comment.Text>{message.content}</Comment.Text>\r\n      )}\r\n    </Comment.Content>\r\n  </Comment>\r\n);\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst Typing = () => (\r\n  <div className=\"typing\">\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n  </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from 'react';\r\n\r\nconst Skeleton = () => (\r\n  <div className=\"skeleton\">\r\n    <div className=\"skeleton__avatar\" />\r\n    <div className=\"skeleton__author\" />\r\n    <div className=\"skeleton__details\" />\r\n  </div>\r\n);\r\n\r\nexport default Skeleton;\r\n","import React from 'react';\r\nimport { Segment, Comment } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { setUserPosts } from '../../actions';\r\nimport firebase from '../../firebase';\r\n\r\nimport MessagesHeader from './MessagesHeader';\r\nimport MessageForm from './MessageForm';\r\nimport Message from './Message';\r\nimport Typing from './Typing';\r\nimport Skeleton from './Skeleton';\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    privateChannel: this.props.isPrivateChannel,\r\n    privateMessagesRef: firebase.database().ref('privateMessages'),\r\n    messagesRef: firebase.database().ref('messages'),\r\n    messages: [],\r\n    messagesLoading: true,\r\n    channel: this.props.currentChannel,\r\n    isChannelStarred: false,\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    numUniqueUsers: '',\r\n    searchTerm: '',\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingRef: firebase.database().ref('typing'),\r\n    typingUsers: [],\r\n    connectedRef: firebase.database().ref('.info/connected'),\r\n    listeners: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user, listeners } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.removeListeners(listeners);\r\n      this.addListeners(channel.id);\r\n      this.addUserStarsListener(channel.id, user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners(this.state.listeners);\r\n    this.state.connectedRef.off();\r\n  }\r\n\r\n  removeListeners = (listeners) => {\r\n    listeners.forEach((listener) => {\r\n      listener.ref.child(listener.id).off(listener.event);\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.messagesEnd) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  addToListeners = (id, ref, event) => {\r\n    const index = this.state.listeners.findIndex((listener) => {\r\n      return (\r\n        listener.id === id && listener.ref === ref && listener.event === event\r\n      );\r\n    });\r\n\r\n    if (index === -1) {\r\n      const newListener = { id, ref, event };\r\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\r\n    }\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  addListeners = (channelId) => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListeners(channelId);\r\n  };\r\n\r\n  addTypingListeners = (channelId) => {\r\n    let typingUsers = [];\r\n    this.state.typingRef.child(channelId).on('child_added', (snap) => {\r\n      if (snap.key !== this.state.user.uid) {\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val(),\r\n        });\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, 'child_added');\r\n\r\n    this.state.typingRef.child(channelId).on('child_removed', (snap) => {\r\n      const index = typingUsers.findIndex((user) => user.id === snap.key);\r\n      if (index !== -1) {\r\n        typingUsers = typingUsers.filter((user) => user.id !== snap.key);\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, 'child_removed');\r\n\r\n    this.state.connectedRef.on('value', (snap) => {\r\n      if (snap.val() === true) {\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user.uid)\r\n          .onDisconnect()\r\n          .remove((err) => {\r\n            if (err !== null) {\r\n              console.error(err);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  addMessageListener = (channelId) => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessagesRef();\r\n    ref.child(channelId).on('child_added', (snap) => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false,\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.countUserPosts(loadedMessages);\r\n    });\r\n    this.addToListeners(channelId, ref, 'child_added');\r\n  };\r\n\r\n  addUserStarsListener = (channelId, userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .once('value')\r\n      .then((data) => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          this.setState({ isChannelStarred: prevStarred });\r\n        }\r\n      });\r\n  };\r\n\r\n  getMessagesRef = () => {\r\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  };\r\n\r\n  handleStar = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        isChannelStarred: !prevState.isChannelStarred,\r\n      }),\r\n      () => this.starChannel()\r\n    );\r\n  };\r\n\r\n  starChannel = () => {\r\n    if (this.state.isChannelStarred) {\r\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\r\n        [this.state.channel.id]: {\r\n          name: this.state.channel.name,\r\n          details: this.state.channel.details,\r\n          createdBy: {\r\n            name: this.state.channel.createdBy.name,\r\n            avatar: this.state.channel.createdBy.avatar,\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/starred`)\r\n        .child(this.state.channel.id)\r\n        .remove((err) => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n        searchLoading: true,\r\n      },\r\n      () => this.handleSearchMessages()\r\n    );\r\n  };\r\n\r\n  handleSearchMessages = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, 'gi');\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    this.setState({ searchResults });\r\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\r\n  };\r\n\r\n  countUniqueUsers = (messages) => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? 's' : ''}`;\r\n    this.setState({ numUniqueUsers });\r\n  };\r\n\r\n  countUserPosts = (messages) => {\r\n    let userPosts = messages.reduce((acc, message) => {\r\n      if (message.user.name in acc) {\r\n        acc[message.user.name].count += 1;\r\n      } else {\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    this.props.setUserPosts(userPosts);\r\n  };\r\n\r\n  displayMessages = (messages) =>\r\n    messages.length > 0 &&\r\n    messages.map((message) => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n\r\n  displayChannelName = (channel) => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? '@' : '#'}${channel.name}`\r\n      : '';\r\n  };\r\n\r\n  displayTypingUsers = (users) =>\r\n    users.length > 0 &&\r\n    users.map((user) => (\r\n      <div\r\n        style={{ display: 'flex', alignItems: 'center', marginBottom: '0.2em' }}\r\n        key={user.id}\r\n      >\r\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\r\n      </div>\r\n    ));\r\n\r\n  displayMessageSkeleton = (loading) =>\r\n    loading ? (\r\n      <React.Fragment>\r\n        {[...Array(10)].map((_, i) => (\r\n          <Skeleton key={i} />\r\n        ))}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n  render() {\r\n    // prettier-ignore\r\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader\r\n          channelName={this.displayChannelName(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          isPrivateChannel={privateChannel}\r\n          handleStar={this.handleStar}\r\n          isChannelStarred={isChannelStarred}\r\n        />\r\n\r\n        <Segment>\r\n          <Comment.Group className=\"messages\">\r\n            {this.displayMessageSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n            <div ref={(node) => (this.messagesEnd = node)} />\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isPrivateChannel={privateChannel}\r\n          getMessagesRef={this.getMessagesRef}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setUserPosts })(Messages);\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Accordion,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n} from 'semantic-ui-react';\r\n\r\nclass MetaPanel extends React.Component {\r\n  state = {\r\n    channel: this.props.currentChannel,\r\n    privateChannel: this.props.isPrivateChannel,\r\n    activeIndex: 0,\r\n  };\r\n\r\n  setActiveIndex = (event, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  formatCount = (num) =>\r\n    num > 1 || num === 0 ? `${num} posts` : `${num} post`;\r\n\r\n  displayTopPosters = (posts) =>\r\n    Object.entries(posts)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map(([key, val], i) => (\r\n        <List.Item key={i}>\r\n          <Image avatar src={val.avatar} />\r\n          <List.Content>\r\n            <List.Header as=\"a\">{key}</List.Header>\r\n            <List.Description>{this.formatCount(val.count)}</List.Description>\r\n          </List.Content>\r\n        </List.Item>\r\n      ))\r\n      .slice(0, 5);\r\n\r\n  render() {\r\n    const { activeIndex, privateChannel, channel } = this.state;\r\n    const { userPosts } = this.props;\r\n\r\n    if (privateChannel) return null;\r\n\r\n    return (\r\n      <Segment loading={!channel}>\r\n        <Header as=\"h3\" attached=\"top\">\r\n          About # {channel && channel.name}\r\n        </Header>\r\n        <Accordion styled attached=\"true\">\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"info\" />\r\n            Channel Details\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            {channel && channel.details}\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"user circle\" />\r\n            Top Posters\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"pencil alternate\" />\r\n            Created By\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 2}>\r\n            <Header as=\"h3\">\r\n              <Image circular src={channel && channel.createdBy.avatar} />\r\n              {channel && channel.createdBy.name}\r\n            </Header>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaPanel;\r\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nimport ColorPanel from './ColorPanel/ColorPanel';\nimport SidePanel from './SidePanel/SidePanel';\nimport Messages from './Messages/Messages';\nimport MetaPanel from './MetaPanel/MetaPanel';\n\n// prettier-ignore\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts, primaryColor, secondaryColor }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n    <ColorPanel\n      key={currentUser && currentUser.name}\n      currentUser={currentUser}\n    />\n    <SidePanel\n      key={currentUser && currentUser.uid}\n      currentUser={currentUser}\n      primaryColor={primaryColor}\n    />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.name}\n        userPosts={userPosts}\n        currentChannel={currentChannel}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport firebase from '../../firebase';\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    errors: [],\n    loading: false,\n  };\n\n  displayErrors = (errors) =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then((signedInUser) => {\n          console.log(signedInUser);\n        })\n        .catch((err) => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some((error) =>\n      error.message.toLowerCase().includes(inputName)\n    )\n      ? 'error'\n      : '';\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to DevChat\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, 'email')}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, 'password')}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? 'loading' : ''}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport firebase from '../../firebase';\nimport md5 from 'md5';\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass Register extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref('users'),\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: 'Fill out all the Fields' };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: 'Password is invalid' };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = (errors) =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      event.preventDefault();\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then((createdUser) => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`,\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log('user saved');\n              });\n            })\n            .catch((err) => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false,\n              });\n            });\n        })\n        .catch((err) => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          });\n        });\n    }\n  };\n\n  saveUser = (createdUser) => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL,\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some((error) =>\n      error.message.toLowerCase().includes(inputName)\n    )\n      ? 'error'\n      : '';\n  };\n\n  render() {\n    const { username, email, password, passwordConfirmation, errors, loading } =\n      this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            Register for Dev Chat\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked={true}>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPositon=\"left\"\n                placeolder=\"UserName\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPositon=\"left\"\n                placeolder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, 'email')}\n                type=\"email\"\n              />\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPositon=\"left\"\n                placeolder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, 'password')}\n                type=\"password\"\n              />\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPositon=\"left\"\n                placeolder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, 'password')}\n                type=\"password\"\n              />\n              <Button\n                disabled={loading}\n                className={loading ? 'loading' : ''}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Alredy a user?<Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nconst Spinner = () => (\r\n  <Dimmer active>\r\n    <Loader size=\"huge\" content={'Preparing Chat...'} />\r\n  </Dimmer>\r\n);\r\n\r\nexport default Spinner;\r\n","import { combineReducers } from 'redux';\r\nimport * as actionTypes from '../actions/types';\r\n\r\nconst initialUserState = {\r\n  currentUser: null,\r\n  isLoading: true,\r\n};\r\n\r\nconst user_reducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser: action.payload.currentUser,\r\n        isLoading: false,\r\n      };\r\n    case actionTypes.CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialChannelState = {\r\n  currentChannel: null,\r\n  isPrivateChannel: false,\r\n  userPosts: null,\r\n};\r\n\r\nconst channel_reducer = (state = initialChannelState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: action.payload.currentChannel,\r\n      };\r\n    case actionTypes.SET_PRIVATE_CHANNEL:\r\n      return {\r\n        ...state,\r\n        isPrivateChannel: action.payload.isPrivateChannel,\r\n      };\r\n    case actionTypes.SET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload.userPosts,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialColorsState = {\r\n  primaryColor: '#4c3c4c',\r\n  secondaryColor: '#eee',\r\n};\r\n\r\nconst colors_reducer = (state = initialColorsState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_COLORS:\r\n      return {\r\n        primaryColor: action.payload.primaryColor,\r\n        secondaryColor: action.payload.secondaryColor,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n  channel: channel_reducer,\r\n  colors: colors_reducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport registerServiceWorker from './registerServiceWorker';\nimport Spinner from './Spinner';\nimport firebase from './firebase';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n} from 'react-router-dom';\n\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { setUser, clearUser } from './actions';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.props.setUser(user);\n        this.props.history.push('/');\n      } else {\n        this.props.history.push('/login');\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = (state) => ({\n  isLoading: state.user.isLoading,\n});\n\nconst RootWithAuth = withRouter(\n  connect(mapStateFromProps, { setUser, clearUser })(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}